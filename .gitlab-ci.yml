# Ref: https://docs.gitlab.com/ee/user/infrastructure/iac/terraform_state.html

image: registry.code.immerda.ch/k8s_at_hetzner/ci-image:master

stages:
  - prepare
  - validate
  - plan
  - apply
  - deploy
  - configure
  - destroy

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/infrastructure
  ANSIBLE_ROOT: ${CI_PROJECT_DIR}/tools

  LANG: C.UTF-8
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/prod
  TF_VAR_do_token: ${do_token}

  ANSIBLE_CONFIG: ${ANSIBLE_ROOT}/ansible.cfg
  PIP_CACHE_DIR: ${ANSIBLE_ROOT}/.cache/pip
  GALAXY_CACHE_DIR: ${ANSIBLE_ROOT}/galaxy_cache
  VENV_DIR: ${ANSIBLE_ROOT}/venv

cache:
  paths:
    - ${TF_ROOT}/.terraform
    - ${PIP_CACHE_DIR}
    - ${VENV_DIR}
 
.common_ansible: &common_ansible
  before_script:
    - python3 -V
    - python3 -m venv ${VENV_DIR}
    - source ${VENV_DIR}/bin/activate
    - cd ${ANSIBLE_ROOT}
      
.common_terraform: &common_terraform
  before_script:
    - terraform --version
    - cd ${TF_ROOT}

init:
  <<: *common_terraform
  stage: prepare
  script:
    - gitlab-terraform init

setup:
  <<: *common_ansible
  stage: prepare
  script:
    - pip install -r requirements.txt
    - ansible-galaxy install -r requirements.yml

validate:
  <<: *common_terraform
  stage: validate
  script:
    - gitlab-terraform validate

ansible_lint:
  <<: *common_ansible
  stage: validate
  script:
    - ansible-lint -v --show-relpath --parseable-severity --nocolor tools.yml

plan:
  <<: *common_terraform
  stage: plan
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

apply:
  <<: *common_terraform
  stage: apply
  script:
    - gitlab-terraform apply
  dependencies:
    - plan

configure:
  <<: *common_ansible
  stage: deploy
  dependencies:
    - apply
  variables:
    DO_API_TOKEN: ${do_token}
  script:
    - ansible-galaxy collection list
    - ansible-playbook tools.yml --vault-password-file=$ansible_vault_password -e "@secrets.yml"

# Allow for destroy by scheduling the destroy job (after every apply)
destroy:
  <<: *common_terraform
  stage: destroy
  when: manual
  script:
  - gitlab-terraform destroy
